node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global_step"
    }
  }
}
node {
  name: "global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "AssignVariableOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond"
  op: "If"
  input: "global_step/VarIsInitializedOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "global_step_cond_false_82788"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "global_step_cond_true_82787"
      }
    }
  }
}
node {
  name: "global_step/cond/Identity"
  op: "Identity"
  input: "global_step/cond"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "AddV2"
  input: "global_step/cond/Identity"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "normalize_element/component_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TensorDataset"
  op: "TensorDataset"
  input: "normalize_element/component_0"
  device: "/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_INT32
          }
        }
      }
    }
  }
}
node {
  name: "FlatMapDataset"
  op: "FlatMapDataset"
  input: "TensorDataset"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_flat_map_flat_map_fn_82824"
        attr {
          key: "_tf_data_function"
          value {
            b: true
          }
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 320
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 42
      }
    }
  }
}
node {
  name: "seed2/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 42
      }
    }
  }
}
node {
  name: "seed2/Equal/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2/Equal"
  op: "Equal"
  input: "seed"
  input: "seed2/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "seed2/Equal_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2/Equal_1"
  op: "Equal"
  input: "seed2/Const"
  input: "seed2/Equal_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "seed2/LogicalAnd"
  op: "LogicalAnd"
  input: "seed2/Equal"
  input: "seed2/Equal_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seed2/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "seed2"
  op: "SelectV2"
  input: "seed2/LogicalAnd"
  input: "seed2/Const_1"
  input: "seed2/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "FlatMapDataset"
  input: "buffer_size"
  input: "seed"
  input: "seed2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "RepeatDataset"
  op: "RepeatDataset"
  input: "ShuffleDataset"
  input: "count"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RepeatDataset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_AaLR40bnax4"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RepeatDataset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RepeatDataset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_linear/step"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/step/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/step"
  input: "adanet/iteration_0/subnetwork_t0_linear/step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/Reshape_1"
  op: "Reshape"
  input: "IteratorGetNext"
  input: "adanet/iteration_0/subnetwork_t0_linear/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/IsNan"
  op: "IsNan"
  input: "adanet/iteration_0/subnetwork_t0_linear/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/ones_like/Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/ones_like"
  input: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/Select"
  op: "Select"
  input: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/IsNan"
  input: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5345224738121033
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5345224738121033
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform/max"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform/mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/bias/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/MatMul"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/Select"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/MatMul"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_linear/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/Sqrt"
  op: "Sqrt"
  input: "adanet/iteration_0/subnetwork_t0_linear/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/strided_slice/stack"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/strided_slice/stack_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/strided_slice"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/concat/values_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/Shape_1"
  op: "Shape"
  input: "IteratorGetNext:1"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Equal"
  op: "Equal"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/concat"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/All"
  op: "All"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Equal"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape must be [D0, D1, ... DN, 1]. Suggested Fix: check your n_classes argument to the head and/or the shape of your label."
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Assert/Const_2"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape must be [D0, D1, ... DN, 1]. Suggested Fix: check your n_classes argument to the head and/or the shape of your label."
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Assert/Assert/data_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Assert/Assert/data_3"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/All"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Assert/Assert/data_0"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Assert/Assert/data_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/concat"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Assert/Assert/data_3"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels"
  op: "Identity"
  input: "IteratorGetNext:1"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_equal_1/Assert/Assert"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Cast/x"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/range"
  op: "Range"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/range/start"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Rank"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/NoOp"
  op: "NoOp"
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/Reshape_2/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/Reshape_2"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value"
  input: "adanet/iteration_0/subnetwork_t0_linear/Reshape_2/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/grad_ys_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/grad_ys_0"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/grad_ys_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/grad_ys_0"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/div_no_nan"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Neg"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/div_no_nan_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/grad_ys_0"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Reshape_1"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/value_grad/tuple/control_dependency"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_1_grad/Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_1_grad/Tile"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_grad/Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_grad/Tile"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Mul_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Reshape_1"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/weighted_loss/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Mul_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Reshape_1"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/head/losses/labels"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/Select"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/MatMul"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/MatMul"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/momentum"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.000000013351432e-10
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/update_adanet/iteration_0/subnetwork_t0_linear/dense/kernel/ResourceApplyRMSProp"
  op: "ResourceApplyRMSProp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/learning_rate"
  input: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/decay"
  input: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/momentum"
  input: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/epsilon"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/update_adanet/iteration_0/subnetwork_t0_linear/dense/bias/ResourceApplyRMSProp"
  op: "ResourceApplyRMSProp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1"
  input: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/learning_rate"
  input: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/decay"
  input: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/momentum"
  input: "adanet/iteration_0/subnetwork_t0_linear/RMSProp/epsilon"
  input: "adanet/iteration_0/subnetwork_t0_linear/gradients/adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_linear/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/RMSProp"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_linear/RMSProp/update_adanet/iteration_0/subnetwork_t0_linear/dense/bias/ResourceApplyRMSProp"
  input: "^adanet/iteration_0/subnetwork_t0_linear/RMSProp/update_adanet/iteration_0/subnetwork_t0_linear/dense/kernel/ResourceApplyRMSProp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape_1"
  op: "Reshape"
  input: "IteratorGetNext"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/IsNan"
  op: "IsNan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/ones_like/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/ones_like/Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/ones_like"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/Select"
  op: "Select"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/IsNan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07580980658531189
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07580980658531189
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/max"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Initializer/zeros"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Initializer/zeros/shape_as_tensor"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/Select"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/Tanh"
  op: "Tanh"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.25
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/Tanh"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 42
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/random_uniform/RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07650920748710632
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07650920748710632
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/max"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Sqrt"
  op: "Sqrt"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/strided_slice/stack"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/strided_slice/stack_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/strided_slice"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/concat/values_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/Shape_1"
  op: "Shape"
  input: "IteratorGetNext:1"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Equal"
  op: "Equal"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/concat"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/All"
  op: "All"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Equal"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape must be [D0, D1, ... DN, 1]. Suggested Fix: check your n_classes argument to the head and/or the shape of your label."
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Assert/Const_2"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape must be [D0, D1, ... DN, 1]. Suggested Fix: check your n_classes argument to the head and/or the shape of your label."
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Assert/Assert/data_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Assert/Assert/data_3"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/All"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Assert/Assert/data_0"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Assert/Assert/data_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/concat"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Assert/Assert/data_3"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels"
  op: "Identity"
  input: "IteratorGetNext:1"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_equal_1/Assert/Assert"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Cast/x"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/range"
  op: "Range"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/range/start"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Rank"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training_1/NoOp"
  op: "NoOp"
}
node {
  name: "loss_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_1"
      }
    }
  }
}
node {
  name: "loss_1"
  op: "ScalarSummary"
  input: "loss_1/tags"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape_2/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape_2"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape_2/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/grad_ys_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/grad_ys_0"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/grad_ys_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/grad_ys_0"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/div_no_nan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Neg"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/div_no_nan_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/grad_ys_0"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Reshape_1"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/value_grad/tuple/control_dependency"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_1_grad/Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_1_grad/Tile"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_grad/Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_grad/Tile"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Mul_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Reshape_1"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/weighted_loss/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Mul_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Reshape_1"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/labels"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/MatMul"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/MatMul"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/tuple/control_dependency"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Mul_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Reshape_1"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/tuple/control_dependency"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/Tanh"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Mul_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Sum_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Reshape"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Reshape_1"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/Tanh"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/Tanh_grad/TanhGrad"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/Tanh_grad/TanhGrad"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd_grad/BiasAddGrad"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/nan_masking_layer/Select"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/MatMul"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/MatMul_1"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/MatMul"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/MatMul_1"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp/Initializer/ones"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp/Initializer/ones/shape_as_tensor"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones/shape_as_tensor"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros"
  op: "Fill"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros/shape_as_tensor"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1"
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/momentum"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.000000013351432e-10
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/update_adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/ResourceApplyRMSProp"
  op: "ResourceApplyRMSProp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/update_adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/ResourceApplyRMSProp"
  op: "ResourceApplyRMSProp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/update_adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/ResourceApplyRMSProp"
  op: "ResourceApplyRMSProp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/update_adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/ResourceApplyRMSProp"
  op: "ResourceApplyRMSProp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/learning_rate"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/decay"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/momentum"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/epsilon"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/gradients/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp"
  op: "NoOp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/update_adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/ResourceApplyRMSProp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/update_adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/ResourceApplyRMSProp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/update_adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/ResourceApplyRMSProp"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp/update_adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/ResourceApplyRMSProp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/nan_masking_layer/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add"
  op: "AddV2"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Abs"
  op: "Abs"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/range"
  op: "Range"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/range/start"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Rank"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Abs"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add"
  op: "AddV2"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add/x"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul/scalar"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul/scalar"
  input: "adanet/iteration_0/subnetwork_t0_linear/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_1"
  op: "AddV2"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_2"
  op: "AddV2"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_2/x"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_1/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_2"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_1/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/packed"
  op: "Pack"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_2/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_2"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_2/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/truediv"
  op: "RealDiv"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_3/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_3"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/truediv"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_3/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/strided_slice/stack"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/strided_slice/stack_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/strided_slice"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/concat/values_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/Shape_1"
  op: "Shape"
  input: "IteratorGetNext:1"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Equal"
  op: "Equal"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/concat"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/All"
  op: "All"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Equal"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape must be [D0, D1, ... DN, 1]. Suggested Fix: check your n_classes argument to the head and/or the shape of your label."
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Const_2"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape must be [D0, D1, ... DN, 1]. Suggested Fix: check your n_classes argument to the head and/or the shape of your label."
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert/data_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert/data_3"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/All"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert/data_0"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert/data_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/concat"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert/data_3"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels"
  op: "Identity"
  input: "IteratorGetNext:1"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Cast/x"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/range"
  op: "Range"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/range/start"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Rank"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training_2/NoOp"
  op: "NoOp"
}
node {
  name: "loss_2/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_2"
      }
    }
  }
}
node {
  name: "loss_2"
  op: "ScalarSummary"
  input: "loss_2/tags"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_3"
  op: "AddV2"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_4/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_4"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_4/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
  op: "Fill"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_3_grad/tuple/control_dependency"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/div_no_nan"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Neg"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/div_no_nan_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_3_grad/tuple/control_dependency"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape_1"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_3_grad/tuple/control_dependency_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_3_grad/tuple/control_dependency_1"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_3_grad/tuple/control_dependency_1"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value_grad/tuple/control_dependency"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_2_grad/tuple/control_dependency_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_2_grad/tuple/control_dependency_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/Mul"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/Mul_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/Mul"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/Mul_1"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Tile"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/scalar_mul_1_grad/tuple/control_dependency_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Tile"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Mul_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape_1"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Sum_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Sum_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Squeeze_grad/Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Sum_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Sum_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Sum_grad/Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Mul_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape_1"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Abs_grad/Sign"
  op: "Sign"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Abs_grad/mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Sum_grad/Tile"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/labels"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Reshape_1"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Shape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/tuple/control_dependency_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/BiasAdd"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Mul_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape_1"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/AddN"
  op: "AddN"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Abs_grad/mul"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/norm/Abs_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/RMSProp/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/RMSProp/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/RMSProp/momentum"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/RMSProp/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.000000013351432e-10
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/RMSProp/update_adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/ResourceApplyRMSProp"
  op: "ResourceApplyRMSProp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/RMSProp/learning_rate"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/RMSProp/decay"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/RMSProp/momentum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/RMSProp/epsilon"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/RMSProp"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/RMSProp/update_adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/ResourceApplyRMSProp"
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/sub"
  op: "Sub"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/mul"
  op: "Mul"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/sub"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
  input: "^adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
  input: "^adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/AssignAddVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/sub_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/sub_1/x"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/Pow/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
  input: "^adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/AssignAddVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/Pow"
  op: "Pow"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/sub_1"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/Pow/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/sub_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/sub_2/x"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
  input: "^adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp_3"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
  input: "^adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
  input: "^adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/AssignMovingAvg"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/Identity"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/Identity"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dropout/dropout/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Initializer/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  op: "AddV2"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Abs"
  op: "Abs"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/range"
  op: "Range"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/range/start"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Rank"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Abs"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  op: "Squeeze"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add"
  op: "AddV2"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add/x"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul/scalar"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul/scalar"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_1"
  op: "AddV2"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2"
  op: "AddV2"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2/x"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_1/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_1/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/packed"
  op: "Pack"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_2/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_2"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_2/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/truediv"
  op: "RealDiv"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_3/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_3"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/truediv"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_3/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/logits/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/strided_slice/stack"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/strided_slice/stack_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/strided_slice/stack_2"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/strided_slice/stack"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/strided_slice/stack_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/concat/values_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/concat/axis"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/concat"
  op: "ConcatV2"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/strided_slice"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/concat/values_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/Shape_1"
  op: "Shape"
  input: "IteratorGetNext:1"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Equal"
  op: "Equal"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/concat"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/All"
  op: "All"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Equal"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape must be [D0, D1, ... DN, 1]. Suggested Fix: check your n_classes argument to the head and/or the shape of your label."
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Const_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Const_2"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert/data_0"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape must be [D0, D1, ... DN, 1]. Suggested Fix: check your n_classes argument to the head and/or the shape of your label."
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert/data_1"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert/data_3"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert"
  op: "Assert"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/All"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert/data_0"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert/data_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/concat"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert/data_3"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels"
  op: "Identity"
  input: "IteratorGetNext:1"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_equal_1/Assert/Assert"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Cast/x"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/num_elements"
  op: "Size"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/range"
  op: "Range"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/range/start"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Rank"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training_3/NoOp"
  op: "NoOp"
}
node {
  name: "loss_3/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_3"
      }
    }
  }
}
node {
  name: "loss_3"
  op: "ScalarSummary"
  input: "loss_3/tags"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_3"
  op: "AddV2"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_4/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_4"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_4/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
  op: "Fill"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_3_grad/tuple/control_dependency"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/div_no_nan"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Neg"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/div_no_nan_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_3_grad/tuple/control_dependency"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape_1"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_3_grad/tuple/control_dependency_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_3_grad/tuple/control_dependency_1"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_3_grad/tuple/control_dependency_1"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value_grad/tuple/control_dependency"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2_grad/tuple/control_dependency_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_2_grad/tuple/control_dependency_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/Mul"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/Mul_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/Mul"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/Mul_1"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_1_grad/Tile"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/scalar_mul_1_grad/tuple/control_dependency_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Tile"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Mul_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape_1"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Sum_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Sum_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Squeeze_grad/Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Sum_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Sum_grad/Tile"
  op: "Tile"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Sum_grad/Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Mul_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape_1"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Abs_grad/Sign"
  op: "Sign"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Abs_grad/mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Sum_grad/Tile"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/labels"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Reshape_1"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Shape"
  op: "Shape"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Shape_1"
  op: "Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Shape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Mul"
  op: "Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/tuple/control_dependency_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Sum"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Mul_1"
  op: "Mul"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/BiasAdd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Sum_1"
  op: "Sum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Mul_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Sum_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape_1"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape_1"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/AddN"
  op: "AddN"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Abs_grad/mul"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/norm/Abs_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/RMSProp/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/RMSProp/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/RMSProp/momentum"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/RMSProp/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.000000013351432e-10
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/RMSProp/update_adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/ResourceApplyRMSProp"
  op: "ResourceApplyRMSProp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/RMSProp/learning_rate"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/RMSProp/decay"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/RMSProp/momentum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/RMSProp/epsilon"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/RMSProp"
  op: "NoOp"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/RMSProp/update_adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/ResourceApplyRMSProp"
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/sub"
  op: "Sub"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/mul"
  op: "Mul"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/sub"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/AssignAddVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/sub_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/sub_1/x"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/Pow/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/AssignAddVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/Pow"
  op: "Pow"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/sub_1"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/Pow/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/sub_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/sub_2"
  op: "Sub"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/sub_2/x"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/truediv"
  op: "RealDiv"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp_3"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/AssignMovingAvg"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/Identity"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/Identity"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/IsNan/x"
  op: "Pack"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/Identity"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/IsNan"
  op: "IsNan"
  input: "adanet/iteration_0/best_candidate_index/IsNan/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/ones_like/tensor"
  op: "Pack"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/Identity"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/ones_like/Shape/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/ones_like"
  op: "Fill"
  input: "adanet/iteration_0/best_candidate_index/ones_like/Shape/shape_as_tensor"
  input: "adanet/iteration_0/best_candidate_index/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -inf
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/mul"
  op: "Mul"
  input: "adanet/iteration_0/best_candidate_index/ones_like"
  input: "adanet/iteration_0/best_candidate_index/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/SelectV2/e"
  op: "Pack"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/Identity"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/SelectV2"
  op: "SelectV2"
  input: "adanet/iteration_0/best_candidate_index/IsNan"
  input: "adanet/iteration_0/best_candidate_index/mul"
  input: "adanet/iteration_0/best_candidate_index/SelectV2/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/ArgMin/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_candidate_index/ArgMin"
  op: "ArgMin"
  input: "adanet/iteration_0/best_candidate_index/SelectV2"
  input: "adanet/iteration_0/best_candidate_index/ArgMin/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/best_predictions/stack"
  op: "Pack"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/logits/Add"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/logits/Add"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/best_predictions/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_predictions/add"
  op: "AddV2"
  input: "adanet/iteration_0/best_candidate_index/ArgMin"
  input: "adanet/iteration_0/best_predictions/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_predictions/strided_slice/stack"
  op: "Pack"
  input: "adanet/iteration_0/best_candidate_index/ArgMin"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/best_predictions/strided_slice/stack_1"
  op: "Pack"
  input: "adanet/iteration_0/best_predictions/add"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/best_predictions/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_predictions/strided_slice/Cast"
  op: "Cast"
  input: "adanet/iteration_0/best_predictions/strided_slice/stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_predictions/strided_slice"
  op: "StridedSlice"
  input: "adanet/iteration_0/best_predictions/stack"
  input: "adanet/iteration_0/best_predictions/strided_slice/stack"
  input: "adanet/iteration_0/best_predictions/strided_slice/stack_1"
  input: "adanet/iteration_0/best_predictions/strided_slice/Cast"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "adanet/iteration_0/best_loss/stack"
  op: "Pack"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/head/losses/weighted_loss/value"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/head/losses/weighted_loss/value"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/best_loss/Slice/begin"
  op: "Pack"
  input: "adanet/iteration_0/best_candidate_index/ArgMin"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "adanet/iteration_0/best_loss/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_loss/Slice"
  op: "Slice"
  input: "adanet/iteration_0/best_loss/stack"
  input: "adanet/iteration_0/best_loss/Slice/begin"
  input: "adanet/iteration_0/best_loss/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_loss/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_loss/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/best_loss/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/best_loss/Slice"
  input: "adanet/iteration_0/best_loss/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/step"
  input: "adanet/iteration_0/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/step"
  input: "^adanet/iteration_0/AssignAddVariableOp"
  input: "^adanet/iteration_0/subnetwork_t0_linear/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/Const_1"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
  input: "adanet/iteration_0/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
  input: "^adanet/iteration_0/AssignAddVariableOp_1"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/Const_2"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/AssignAddVariableOp_2"
  op: "AssignAddVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
  input: "adanet/iteration_0/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
  input: "^adanet/iteration_0/AssignAddVariableOp_2"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/Const_3"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/AssignAddVariableOp_3"
  op: "AssignAddVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
  input: "adanet/iteration_0/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
  input: "^adanet/iteration_0/AssignAddVariableOp_3"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/Const_4"
  input: "adanet/iteration_0/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/Reshape_1/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/Reshape_1"
  op: "Reshape"
  input: "adanet/iteration_0/best_loss/Reshape"
  input: "adanet/iteration_0/Reshape_1/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/iteration_number/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/iteration_number"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/iteration_number"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/iteration_number"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/iteration_number"
    }
  }
}
node {
  name: "adanet/iteration_0/iteration_number/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/iteration_number"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/iteration_number/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/iteration_number"
  input: "adanet/iteration_0/iteration_number/Initializer/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/iteration_number/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/iteration_number"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/save_counter/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/save_counter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/save_counter"
  op: "VarHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@adanet/iteration_0/save_counter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "adanet/iteration_0/save_counter"
    }
  }
}
node {
  name: "adanet/iteration_0/save_counter/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/save_counter"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/save_counter/Assign"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/save_counter"
  input: "adanet/iteration_0/save_counter/Initializer/initial_value"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "adanet/iteration_0/save_counter/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/save_counter"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/NoOp"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/init"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/init_all_tables"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/init_1"
  op: "NoOp"
}
node {
  name: "adanet/iteration_0/group_deps"
  op: "NoOp"
  input: "^adanet/iteration_0/init"
  input: "^adanet/iteration_0/init_1"
  input: "^adanet/iteration_0/init_all_tables"
}
node {
  name: "adanet/iteration_0/group_deps_1"
  op: "NoOp"
  input: "^adanet/iteration_0/group_deps"
}
node {
  name: "current_iteration/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "current_iteration"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@current_iteration"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "current_iteration"
    }
  }
}
node {
  name: "current_iteration/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "current_iteration"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "current_iteration/Assign"
  op: "AssignVariableOp"
  input: "current_iteration"
  input: "current_iteration/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "current_iteration/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "current_iteration"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "create_file_writer/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/aloy/home/ymartins/Documents/cc_update/chemical_checker/package/tests/data/adanet/subnetwork/t0_linear"
      }
    }
  }
}
node {
  name: "create_file_writer/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "create_file_writer/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 120000
      }
    }
  }
}
node {
  name: "create_file_writer/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ".v2"
      }
    }
  }
}
node {
  name: "create_file_writer/SummaryWriter"
  op: "SummaryWriter"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "create_file_writer"
    }
  }
}
node {
  name: "create_file_writer/CreateSummaryFileWriter"
  op: "CreateSummaryFileWriter"
  input: "create_file_writer/SummaryWriter"
  input: "create_file_writer/Const"
  input: "create_file_writer/Const_1"
  input: "create_file_writer/Const_2"
  input: "create_file_writer/Const_3"
  device: "/device:CPU:0"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_linear/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "iteration_step/adanet/iteration_step"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary"
  op: "WriteSummary"
  input: "create_file_writer/SummaryWriter"
  input: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/tag"
  input: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/t0_linear/iteration_step/adanet/iteration_step/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/Reshape_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary"
  op: "WriteSummary"
  input: "create_file_writer/SummaryWriter"
  input: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/Identity"
  input: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/tag"
  input: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_linear/t0_linear/loss/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "FlushSummaryWriter"
  op: "FlushSummaryWriter"
  input: "create_file_writer/SummaryWriter"
  device: "/device:CPU:0"
}
node {
  name: "create_file_writer_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/aloy/home/ymartins/Documents/cc_update/chemical_checker/package/tests/data/adanet/subnetwork/t0_1_layer_dnn"
      }
    }
  }
}
node {
  name: "create_file_writer_1/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "create_file_writer_1/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 120000
      }
    }
  }
}
node {
  name: "create_file_writer_1/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ".v2"
      }
    }
  }
}
node {
  name: "create_file_writer_1/SummaryWriter"
  op: "SummaryWriter"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "create_file_writer_1"
    }
  }
}
node {
  name: "create_file_writer_1/CreateSummaryFileWriter"
  op: "CreateSummaryFileWriter"
  input: "create_file_writer_1/SummaryWriter"
  input: "create_file_writer_1/Const"
  input: "create_file_writer_1/Const_1"
  input: "create_file_writer_1/Const_2"
  input: "create_file_writer_1/Const_3"
  device: "/device:CPU:0"
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/Cast"
  op: "Cast"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "iteration_step/adanet/iteration_step"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_1/SummaryWriter"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/tag"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/iteration_step/adanet/iteration_step/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/Reshape_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_1/SummaryWriter"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/Identity"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/tag"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/t0_1_layer_dnn/loss/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "FlushSummaryWriter_1"
  op: "FlushSummaryWriter"
  input: "create_file_writer_1/SummaryWriter"
  device: "/device:CPU:0"
}
node {
  name: "create_file_writer_2/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/aloy/home/ymartins/Documents/cc_update/chemical_checker/package/tests/data/adanet/ensemble/t0_linear_grow_complexity_regularized"
      }
    }
  }
}
node {
  name: "create_file_writer_2/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "create_file_writer_2/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 120000
      }
    }
  }
}
node {
  name: "create_file_writer_2/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ".v2"
      }
    }
  }
}
node {
  name: "create_file_writer_2/SummaryWriter"
  op: "SummaryWriter"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "create_file_writer_2"
    }
  }
}
node {
  name: "create_file_writer_2/CreateSummaryFileWriter"
  op: "CreateSummaryFileWriter"
  input: "create_file_writer_2/SummaryWriter"
  input: "create_file_writer_2/Const"
  input: "create_file_writer_2/Const_1"
  input: "create_file_writer_2/Const_2"
  input: "create_file_writer_2/Const_3"
  device: "/device:CPU:0"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/Cast"
  op: "Cast"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "iteration_step/adanet/iteration_step"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_2/SummaryWriter"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/tag"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "complexity_regularization/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_2/SummaryWriter"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/tag"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/StopGradient"
  op: "StopGradient"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/packed"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/assert_scalar"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/assert_type/tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/assert_type/statically_determined_correct_type"
  op: "NoOp"
  device: "/device:CPU:0"
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum/x"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/StopGradient"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Cast"
  op: "Cast"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Equal/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Equal"
  op: "Equal"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Size"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/LessEqual/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/LessEqual/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/LogicalOr"
  op: "LogicalOr"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Equal"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/LessEqual"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/cond"
  op: "StatelessIf"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/LogicalOr"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Cast"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Size"
  device: "/device:CPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_INT32
        type: DT_DOUBLE
        type: DT_INT32
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cond_false_83967"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cond_true_83966"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/cond/Identity"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/cond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weights/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\014\n\nhistograms"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_2/SummaryWriter"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/cond/Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/tag"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_2/SummaryWriter"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/tag"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_2/SummaryWriter"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/tag"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/Reshape_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_2/SummaryWriter"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/Identity"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/tag"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/loss/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet_loss/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_2/SummaryWriter"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/Identity"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/tag"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/t0_linear_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "FlushSummaryWriter_2"
  op: "FlushSummaryWriter"
  input: "create_file_writer_2/SummaryWriter"
  device: "/device:CPU:0"
}
node {
  name: "create_file_writer_3/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/aloy/home/ymartins/Documents/cc_update/chemical_checker/package/tests/data/adanet/ensemble/t0_1_layer_dnn_grow_complexity_regularized"
      }
    }
  }
}
node {
  name: "create_file_writer_3/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "create_file_writer_3/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 120000
      }
    }
  }
}
node {
  name: "create_file_writer_3/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ".v2"
      }
    }
  }
}
node {
  name: "create_file_writer_3/SummaryWriter"
  op: "SummaryWriter"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "create_file_writer_3"
    }
  }
}
node {
  name: "create_file_writer_3/CreateSummaryFileWriter"
  op: "CreateSummaryFileWriter"
  input: "create_file_writer_3/SummaryWriter"
  input: "create_file_writer_3/Const"
  input: "create_file_writer_3/Const_1"
  input: "create_file_writer_3/Const_2"
  input: "create_file_writer_3/Const_3"
  device: "/device:CPU:0"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/Cast"
  op: "Cast"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "iteration_step/adanet/iteration_step"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_3/SummaryWriter"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/tag"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/iteration_step/adanet/iteration_step/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "complexity_regularization/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_3/SummaryWriter"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/tag"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/complexity_regularization/adanet/adanet_weighted_ensemble/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/StopGradient"
  op: "StopGradient"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/packed"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/assert_scalar"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/assert_type/tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/assert_type/statically_determined_correct_type"
  op: "NoOp"
  device: "/device:CPU:0"
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum"
  op: "Maximum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum/x"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Reshape"
  op: "Reshape"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/StopGradient"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Cast"
  op: "Cast"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Equal/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Equal"
  op: "Equal"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Size"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Equal/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/LessEqual/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/LessEqual"
  op: "LessEqual"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/LessEqual/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/LogicalOr"
  op: "LogicalOr"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Equal"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/LessEqual"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/cond"
  op: "StatelessIf"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/LogicalOr"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Maximum"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Cast"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/Size"
  device: "/device:CPU:0"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_INT32
        type: DT_DOUBLE
        type: DT_INT32
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_DOUBLE
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cond_false_84193"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cond_true_84192"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/cond/Identity"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/cond"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weights/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\014\n\nhistograms"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_3/SummaryWriter"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/buckets/cond/Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/tag"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weights/adanet/adanet_weighted_ensemble/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_3/SummaryWriter"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/tag"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_norms/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_3/SummaryWriter"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/tag"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/mixture_weight_fractions/adanet/adanet_weighted_ensemble/subnetwork_0/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/Reshape_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_3/SummaryWriter"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/Identity"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/tag"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/loss/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "adanet_loss/adanet/adanet_weighted_ensemble"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_3/SummaryWriter"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/Identity"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/tag"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/adanet/adanet_weighted_ensemble/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "FlushSummaryWriter_3"
  op: "FlushSummaryWriter"
  input: "create_file_writer_3/SummaryWriter"
  device: "/device:CPU:0"
}
node {
  name: "create_file_writer_4/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/aloy/home/ymartins/Documents/cc_update/chemical_checker/package/tests/data/adanet"
      }
    }
  }
}
node {
  name: "create_file_writer_4/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "create_file_writer_4/Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 120000
      }
    }
  }
}
node {
  name: "create_file_writer_4/Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ".v2"
      }
    }
  }
}
node {
  name: "create_file_writer_4/SummaryWriter"
  op: "SummaryWriter"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "create_file_writer_4"
    }
  }
}
node {
  name: "create_file_writer_4/CreateSummaryFileWriter"
  op: "CreateSummaryFileWriter"
  input: "create_file_writer_4/SummaryWriter"
  input: "create_file_writer_4/Const"
  input: "create_file_writer_4/Const_1"
  input: "create_file_writer_4/Const_2"
  input: "create_file_writer_4/Const_3"
  device: "/device:CPU:0"
}
node {
  name: "adanet/iteration_0/default/iteration/adanet/iteration/Cast"
  op: "Cast"
  input: "adanet/iteration_0/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/default/iteration/adanet/iteration/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "iteration/adanet/iteration"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_4/SummaryWriter"
  input: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/Identity"
  input: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/tag"
  input: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/default/iteration/adanet/iteration/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/default/iteration/adanet/iteration/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/loss/write_summary/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/loss/write_summary/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/loss/write_summary/LogicalAnd"
  op: "LogicalAnd"
  input: "adanet/iteration_0/default/loss/write_summary/LogicalAnd/x"
  input: "adanet/iteration_0/default/loss/write_summary/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/loss/write_summary/Identity"
  op: "Identity"
  input: "adanet/iteration_0/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/loss/write_summary/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "adanet/iteration_0/default/loss/write_summary/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/loss/write_summary/summary_metadata"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "\n\t\n\007scalars"
      }
    }
  }
}
node {
  name: "adanet/iteration_0/default/loss/write_summary"
  op: "WriteSummary"
  input: "create_file_writer_4/SummaryWriter"
  input: "adanet/iteration_0/default/loss/write_summary/ReadVariableOp"
  input: "adanet/iteration_0/default/loss/write_summary/Identity"
  input: "adanet/iteration_0/default/loss/write_summary/tag"
  input: "adanet/iteration_0/default/loss/write_summary/summary_metadata"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "adanet/iteration_0/default/loss/write_summary/Const"
  op: "Const"
  input: "^adanet/iteration_0/default/loss/write_summary"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "FlushSummaryWriter_4"
  op: "FlushSummaryWriter"
  input: "create_file_writer_4/SummaryWriter"
  device: "/device:CPU:0"
}
node {
  name: "Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "add/x"
  input: "Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Identity_1"
  op: "Identity"
  input: "Read_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "add_1"
  op: "AddV2"
  input: "add_1/x"
  input: "Identity_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Rank/packed"
  op: "Pack"
  input: "add"
  input: "add_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range"
  op: "Range"
  input: "range/start"
  input: "Rank"
  input: "range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Mean/input"
  op: "Pack"
  input: "add"
  input: "add_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Mean/input"
  input: "range"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "global_step"
  input: "Mean"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  input: "^AssignVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "init/NoOp"
  op: "NoOp"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Assign"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Assign"
  input: "^adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Assign"
  input: "^adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased/Assign"
  input: "^adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step/Assign"
  input: "^adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/Assign"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias/Assign"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step/Assign"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/Assign"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/Assign"
  input: "^adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias/Assign"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step/Assign"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/Assign"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/Assign"
  input: "^adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Assign"
  input: "^adanet/iteration_0/iteration_number/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_1_layer_dnn/step/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_linear/dense/bias/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Assign"
  input: "^adanet/iteration_0/subnetwork_t0_linear/step/Assign"
  input: "^current_iteration/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init/NoOp_1"
  op: "NoOp"
  input: "^adanet/iteration_0/save_counter/Assign"
  device: "/device:CPU:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^init/NoOp"
  input: "^init/NoOp_1"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/iteration_number"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/save_counter"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "current_iteration"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  input: "report_uninitialized_variables/VarIsInitializedOp_31"
  input: "report_uninitialized_variables/VarIsInitializedOp_32"
  input: "report_uninitialized_variables/VarIsInitializedOp_33"
  input: "report_uninitialized_variables/VarIsInitializedOp_34"
  input: "report_uninitialized_variables/VarIsInitializedOp_35"
  input: "report_uninitialized_variables/VarIsInitializedOp_36"
  input: "report_uninitialized_variables/VarIsInitializedOp_37"
  input: "report_uninitialized_variables/VarIsInitializedOp_38"
  input: "report_uninitialized_variables/VarIsInitializedOp_39"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 40
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 40
          }
        }
        string_val: "global_step"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/step"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
        string_val: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/iteration_number"
        string_val: "adanet/iteration_0/save_counter"
        string_val: "current_iteration"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/iteration_number"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "adanet/iteration_0/save_counter"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "current_iteration"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 40
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 40
          }
        }
        string_val: "global_step"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/step"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
        string_val: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/iteration_number"
        string_val: "adanet/iteration_0/save_counter"
        string_val: "current_iteration"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StaticRegexFullMatch"
  op: "StaticRegexFullMatch"
  input: "save/Const"
  device: "/device:CPU:*"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "pattern"
    value {
      s: "^s3://.*"
    }
  }
}
node {
  name: "save/Const_1"
  op: "Const"
  device: "/device:CPU:*"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ".part"
      }
    }
  }
}
node {
  name: "save/Const_2"
  op: "Const"
  device: "/device:CPU:*"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp/part"
      }
    }
  }
}
node {
  name: "save/Select"
  op: "Select"
  input: "save/StaticRegexFullMatch"
  input: "save/Const_1"
  input: "save/Const_2"
  device: "/device:CPU:*"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/Select"
  device: "/device:CPU:*"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/iteration_number"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/step"
        string_val: "current_iteration"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased/Read/ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step/Read/ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/Read/ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased/Read/ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step/Read/ReadVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/Read/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias/Read/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step/Read/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/Read/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/Read/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Read/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias/Read/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step/Read/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp/Read/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1/Read/ReadVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/Read/ReadVariableOp"
  input: "adanet/iteration_0/iteration_number/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/bias/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel/Read/ReadVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/step/Read/ReadVariableOp"
  input: "current_iteration/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename_1/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "adanet/iteration_0/save_counter"
      }
    }
  }
}
node {
  name: "save/SaveV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2_1"
  op: "SaveV2"
  input: "save/ShardedFilename_1"
  input: "save/SaveV2_1/tensor_names"
  input: "save/SaveV2_1/shape_and_slices"
  input: "adanet/iteration_0/save_counter/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency_1"
  op: "Identity"
  input: "save/ShardedFilename_1"
  input: "^save/SaveV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "save/ShardedFilename_1"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
        string_val: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
        string_val: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
        string_val: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
        string_val: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
        string_val: "adanet/iteration_0/iteration_number"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
        string_val: "adanet/iteration_0/subnetwork_t0_linear/step"
        string_val: "current_iteration"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 39
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/biased"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss/local_step"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_1_layer_dnn_grow_complexity_regularized/adanet_loss"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/biased"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss/local_step"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/candidate_t0_linear_grow_complexity_regularized/adanet_loss"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/bias"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/step"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_1_layer_dnn_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/bias"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/step"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/train_mixture_weights/adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight/RMSProp_1"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/ensemble_t0_linear_grow_complexity_regularized/weighted_subnetwork_0/logits/mixture_weight"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/iteration_number"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias/RMSProp_1"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel/RMSProp_1"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias/RMSProp_1"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel/RMSProp_1"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/bias"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense/kernel"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/bias"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/dense_1/kernel"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_1_layer_dnn/step"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/bias/RMSProp_1"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/adanet/iteration_0/subnetwork_t0_linear/dense/kernel/RMSProp_1"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/bias"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/dense/kernel"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/subnetwork_t0_linear/step"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "current_iteration"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "adanet/iteration_0/save_counter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "adanet/iteration_0/save_counter"
  input: "save/Identity_40"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/restore_shard_1"
  op: "NoOp"
  input: "^save/AssignVariableOp_39"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/restore_shard"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/restore_shard_1"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
library {
  function {
    signature {
      name: "adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cond_true_84192"
      input_arg {
        name: "zeros_packed_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_DOUBLE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT32
      }
      output_arg {
        name: "zeros"
        type: DT_DOUBLE
      }
    }
    node_def {
      name: "zeros/packed/1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "zeros/packed"
      op: "Pack"
      input: "zeros_packed_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      input: "zeros/packed/1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "zeros/Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
            }
            double_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "zeros_0"
      op: "Fill"
      input: "zeros/packed:output:0"
      input: "zeros/Const:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "zeros"
      value: "zeros_0:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: 1
            }
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "_make_dataset_AaLR40bnax4"
      output_arg {
        name: "repeatdataset"
        type: DT_VARIANT
      }
      description: "Factory function for a dataset."
      is_stateful: true
    }
    node_def {
      name: "normalize_element/component_0"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "TensorDataset"
      op: "TensorDataset"
      input: "normalize_element/component_0:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_INT32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "FlatMapDataset"
      op: "FlatMapDataset"
      input: "TensorDataset:handle:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_Dataset_flat_map_flat_map_fn_82824"
            attr {
              key: "_tf_data_function"
              value {
                b: true
              }
            }
          }
        }
      }
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 320
          }
        }
      }
    }
    node_def {
      name: "seed"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 42
          }
        }
      }
    }
    node_def {
      name: "seed_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 42
          }
        }
      }
    }
    node_def {
      name: "seed2/Equal/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "seed2/Equal"
      op: "Equal"
      input: "seed_1:output:0"
      input: "seed2/Equal/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "seed2/Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 42
          }
        }
      }
    }
    node_def {
      name: "seed2/Equal_1/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "seed2/Equal_1"
      op: "Equal"
      input: "seed2/Const:output:0"
      input: "seed2/Equal_1/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "seed2/LogicalAnd"
      op: "LogicalAnd"
      input: "seed2/Equal:z:0"
      input: "seed2/Equal_1:z:0"
      device: "/device:CPU:0"
    }
    node_def {
      name: "seed2/Const_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "seed2/Const_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 42
          }
        }
      }
    }
    node_def {
      name: "seed2"
      op: "SelectV2"
      input: "seed2/LogicalAnd:z:0"
      input: "seed2/Const_1:output:0"
      input: "seed2/Const_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "FlatMapDataset:handle:0"
      input: "buffer_size:output:0"
      input: "seed:output:0"
      input: "seed2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "count:output:0"
      device: "/device:CPU:0"
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    ret {
      key: "repeatdataset"
      value: "RepeatDataset:handle:0"
    }
    attr {
      key: "_disable_call_shape_inference"
      value {
        b: true
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_from_generator_generator_next_fn_82816"
      input_arg {
        name: "args_0"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      is_stateful: true
      control_output: "PyFunc"
    }
    node_def {
      name: "PyFunc"
      op: "PyFunc"
      input: "args_0"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "token"
        value {
          s: "pyfunc_37"
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "PyFunc:output:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "PyFunc:output:1"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^PyFunc"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "_tf_data_function"
      value {
        b: true
      }
    }
    control_ret {
      key: "PyFunc"
      value: "PyFunc"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_false_83984"
      input_arg {
        name: "cast_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
        type: DT_INT32
      }
      input_arg {
        name: "linspace_broadcastto_1_max"
        type: DT_DOUBLE
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "truediv_sub"
        type: DT_DOUBLE
      }
      input_arg {
        name: "sub_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cast"
        type: DT_DOUBLE
      }
      input_arg {
        name: "sub_min"
        type: DT_DOUBLE
      }
      output_arg {
        name: "transpose"
        type: DT_DOUBLE
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "cast_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "truediv"
      op: "RealDiv"
      input: "truediv_sub"
      input: "Cast:y:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "sub"
      op: "Sub"
      input: "sub_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cast"
      input: "sub_min"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "truediv_1"
      op: "RealDiv"
      input: "sub:z:0"
      input: "truediv:z:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Floor"
      op: "Floor"
      input: "truediv_1:z:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Cast_1"
      op: "Cast"
      input: "Floor:y:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "sub_1/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sub_1"
      op: "Sub"
      input: "cast_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      input: "sub_1/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Minimum"
      op: "Minimum"
      input: "Cast_1:y:0"
      input: "sub_1:z:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "one_hot/on_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
            }
            double_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "one_hot/off_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
            }
            double_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "one_hot"
      op: "OneHot"
      input: "Minimum:z:0"
      input: "cast_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      input: "one_hot/on_value:output:0"
      input: "one_hot/off_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "TI"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: -1
        }
      }
    }
    node_def {
      name: "Sum/reduction_indices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Sum"
      op: "Sum"
      input: "one_hot:output:0"
      input: "Sum/reduction_indices:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add"
      op: "AddV2"
      input: "cast_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      input: "add/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Cast"
      op: "Cast"
      input: "add:z:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Cast_1"
      op: "Cast"
      input: "linspace/Cast:y:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Shape"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Shape_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/BroadcastArgs"
      op: "BroadcastArgs"
      input: "linspace/Shape:output:0"
      input: "linspace/Shape_1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/BroadcastTo"
      op: "BroadcastTo"
      input: "sub_min"
      input: "linspace/BroadcastArgs:r0:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/BroadcastTo_1"
      op: "BroadcastTo"
      input: "linspace_broadcastto_1_max"
      input: "linspace/BroadcastArgs:r0:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/ExpandDims/dim"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/ExpandDims"
      op: "ExpandDims"
      input: "linspace/BroadcastTo:output:0"
      input: "linspace/ExpandDims/dim:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/ExpandDims_1/dim"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/ExpandDims_1"
      op: "ExpandDims"
      input: "linspace/BroadcastTo_1:output:0"
      input: "linspace/ExpandDims_1/dim:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Shape_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/Shape_3"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/strided_slice/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/strided_slice/stack_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/strided_slice/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/strided_slice"
      op: "StridedSlice"
      input: "linspace/Shape_3:output:0"
      input: "linspace/strided_slice/stack:output:0"
      input: "linspace/strided_slice/stack_1:output:0"
      input: "linspace/strided_slice/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "linspace/add/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/add"
      op: "AddV2"
      input: "linspace/strided_slice:output:0"
      input: "linspace/add/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2/condition"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: true
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2/t"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2"
      op: "SelectV2"
      input: "linspace/SelectV2/condition:output:0"
      input: "linspace/SelectV2/t:output:0"
      input: "linspace/add:z:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/sub/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "linspace/sub"
      op: "Sub"
      input: "linspace/Cast:y:0"
      input: "linspace/sub/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Maximum/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/Maximum"
      op: "Maximum"
      input: "linspace/sub:z:0"
      input: "linspace/Maximum/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/sub_1/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/sub_1"
      op: "Sub"
      input: "linspace/Cast:y:0"
      input: "linspace/sub_1/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Maximum_1/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/Maximum_1"
      op: "Maximum"
      input: "linspace/sub_1:z:0"
      input: "linspace/Maximum_1/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/sub_2"
      op: "Sub"
      input: "linspace/ExpandDims_1:output:0"
      input: "linspace/ExpandDims:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Cast_2"
      op: "Cast"
      input: "linspace/Maximum_1:z:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/truediv"
      op: "RealDiv"
      input: "linspace/sub_2:z:0"
      input: "linspace/Cast_2:y:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/GreaterEqual/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/GreaterEqual"
      op: "GreaterEqual"
      input: "linspace/Cast:y:0"
      input: "linspace/GreaterEqual/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2_1/e"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2_1"
      op: "SelectV2"
      input: "linspace/GreaterEqual:z:0"
      input: "linspace/Maximum_1:z:0"
      input: "linspace/SelectV2_1/e:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/range/start"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/range/delta"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/range/Cast"
      op: "Cast"
      input: "linspace/SelectV2_1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/range"
      op: "Range"
      input: "linspace/range/start:output:0"
      input: "linspace/range/Cast:y:0"
      input: "linspace/range/delta:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Cast_3"
      op: "Cast"
      input: "linspace/range:output:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/range_1/start"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/range_1/delta"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/range_1"
      op: "Range"
      input: "linspace/range_1/start:output:0"
      input: "linspace/strided_slice:output:0"
      input: "linspace/range_1/delta:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Equal"
      op: "Equal"
      input: "linspace/SelectV2:output:0"
      input: "linspace/range_1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "linspace/SelectV2_2/e"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2_2"
      op: "SelectV2"
      input: "linspace/Equal:z:0"
      input: "linspace/Maximum:z:0"
      input: "linspace/SelectV2_2/e:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Reshape"
      op: "Reshape"
      input: "linspace/Cast_3:y:0"
      input: "linspace/SelectV2_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/mul"
      op: "Mul"
      input: "linspace/truediv:z:0"
      input: "linspace/Reshape:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/add_1"
      op: "AddV2"
      input: "linspace/ExpandDims:output:0"
      input: "linspace/mul:z:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/concat"
      op: "ConcatV2"
      input: "linspace/ExpandDims:output:0"
      input: "linspace/add_1:z:0"
      input: "linspace/ExpandDims_1:output:0"
      input: "linspace/SelectV2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/zeros_like"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2_3"
      op: "SelectV2"
      input: "linspace/Equal:z:0"
      input: "linspace/Cast:y:0"
      input: "linspace/Shape_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Slice"
      op: "Slice"
      input: "linspace/concat:output:0"
      input: "linspace/zeros_like:output:0"
      input: "linspace/SelectV2_3:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice"
      op: "StridedSlice"
      input: "linspace/Slice:output:0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "concat/values_1"
      op: "Pack"
      input: "linspace_broadcastto_1_max"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "concat/axis"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "concat"
      op: "ConcatV2"
      input: "strided_slice:output:0"
      input: "concat/values_1:output:0"
      input: "concat/axis:output:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1"
      op: "StridedSlice"
      input: "concat:output:0"
      input: "strided_slice_1/stack:output:0"
      input: "strided_slice_1/stack_1:output:0"
      input: "strided_slice_1/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "strided_slice_2/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_2/stack_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_2/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_2"
      op: "StridedSlice"
      input: "concat:output:0"
      input: "strided_slice_2/stack:output:0"
      input: "strided_slice_2/stack_1:output:0"
      input: "strided_slice_2/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stack"
      op: "Pack"
      input: "strided_slice_1:output:0"
      input: "strided_slice_2:output:0"
      input: "Sum:output:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "transpose/perm"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "transpose_0"
      op: "Transpose"
      input: "stack:output:0"
      input: "transpose/perm:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "transpose"
      value: "transpose_0:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: 1
            }
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_flat_map_flat_map_fn_82824"
      input_arg {
        name: "args_0"
        type: DT_INT32
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      is_stateful: true
      control_output: "GeneratorDataset"
    }
    node_def {
      name: "GeneratorDataset"
      op: "GeneratorDataset"
      input: "args_0"
      attr {
        key: "Tfinalize_func_args"
        value {
          list {
          }
        }
      }
      attr {
        key: "Tinit_func_args"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "Tnext_func_args"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "finalize_func"
        value {
          func {
            name: "__inference_Dataset_from_generator_finalize_fn_82821"
            attr {
              key: "_tf_data_function"
              value {
                b: true
              }
            }
          }
        }
      }
      attr {
        key: "init_func"
        value {
          func {
            name: "__inference_Dataset_from_generator_get_iterator_id_fn_82809"
            attr {
              key: "_tf_data_function"
              value {
                b: true
              }
            }
          }
        }
      }
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "next_func"
        value {
          func {
            name: "__inference_Dataset_from_generator_generator_next_fn_82816"
            attr {
              key: "_tf_data_function"
              value {
                b: true
              }
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "GeneratorDataset:handle:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^GeneratorDataset"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "_tf_data_function"
      value {
        b: true
      }
    }
    control_ret {
      key: "GeneratorDataset"
      value: "GeneratorDataset"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_false_84210"
      input_arg {
        name: "cast_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
        type: DT_INT32
      }
      input_arg {
        name: "linspace_broadcastto_1_max"
        type: DT_DOUBLE
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "truediv_sub"
        type: DT_DOUBLE
      }
      input_arg {
        name: "sub_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cast"
        type: DT_DOUBLE
      }
      input_arg {
        name: "sub_min"
        type: DT_DOUBLE
      }
      output_arg {
        name: "transpose"
        type: DT_DOUBLE
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "cast_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "truediv"
      op: "RealDiv"
      input: "truediv_sub"
      input: "Cast:y:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "sub"
      op: "Sub"
      input: "sub_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cast"
      input: "sub_min"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "truediv_1"
      op: "RealDiv"
      input: "sub:z:0"
      input: "truediv:z:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Floor"
      op: "Floor"
      input: "truediv_1:z:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Cast_1"
      op: "Cast"
      input: "Floor:y:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "sub_1/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sub_1"
      op: "Sub"
      input: "cast_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      input: "sub_1/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Minimum"
      op: "Minimum"
      input: "Cast_1:y:0"
      input: "sub_1:z:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "one_hot/on_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
            }
            double_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "one_hot/off_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
            }
            double_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "one_hot"
      op: "OneHot"
      input: "Minimum:z:0"
      input: "cast_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      input: "one_hot/on_value:output:0"
      input: "one_hot/off_value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "TI"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: -1
        }
      }
    }
    node_def {
      name: "Sum/reduction_indices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Sum"
      op: "Sum"
      input: "one_hot:output:0"
      input: "Sum/reduction_indices:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add"
      op: "AddV2"
      input: "cast_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      input: "add/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Cast"
      op: "Cast"
      input: "add:z:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Cast_1"
      op: "Cast"
      input: "linspace/Cast:y:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Shape"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Shape_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/BroadcastArgs"
      op: "BroadcastArgs"
      input: "linspace/Shape:output:0"
      input: "linspace/Shape_1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/BroadcastTo"
      op: "BroadcastTo"
      input: "sub_min"
      input: "linspace/BroadcastArgs:r0:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/BroadcastTo_1"
      op: "BroadcastTo"
      input: "linspace_broadcastto_1_max"
      input: "linspace/BroadcastArgs:r0:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/ExpandDims/dim"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/ExpandDims"
      op: "ExpandDims"
      input: "linspace/BroadcastTo:output:0"
      input: "linspace/ExpandDims/dim:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/ExpandDims_1/dim"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/ExpandDims_1"
      op: "ExpandDims"
      input: "linspace/BroadcastTo_1:output:0"
      input: "linspace/ExpandDims_1/dim:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Shape_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/Shape_3"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/strided_slice/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/strided_slice/stack_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/strided_slice/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/strided_slice"
      op: "StridedSlice"
      input: "linspace/Shape_3:output:0"
      input: "linspace/strided_slice/stack:output:0"
      input: "linspace/strided_slice/stack_1:output:0"
      input: "linspace/strided_slice/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "linspace/add/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/add"
      op: "AddV2"
      input: "linspace/strided_slice:output:0"
      input: "linspace/add/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2/condition"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: true
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2/t"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2"
      op: "SelectV2"
      input: "linspace/SelectV2/condition:output:0"
      input: "linspace/SelectV2/t:output:0"
      input: "linspace/add:z:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/sub/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "linspace/sub"
      op: "Sub"
      input: "linspace/Cast:y:0"
      input: "linspace/sub/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Maximum/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/Maximum"
      op: "Maximum"
      input: "linspace/sub:z:0"
      input: "linspace/Maximum/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/sub_1/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/sub_1"
      op: "Sub"
      input: "linspace/Cast:y:0"
      input: "linspace/sub_1/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Maximum_1/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/Maximum_1"
      op: "Maximum"
      input: "linspace/sub_1:z:0"
      input: "linspace/Maximum_1/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/sub_2"
      op: "Sub"
      input: "linspace/ExpandDims_1:output:0"
      input: "linspace/ExpandDims:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Cast_2"
      op: "Cast"
      input: "linspace/Maximum_1:z:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/truediv"
      op: "RealDiv"
      input: "linspace/sub_2:z:0"
      input: "linspace/Cast_2:y:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/GreaterEqual/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/GreaterEqual"
      op: "GreaterEqual"
      input: "linspace/Cast:y:0"
      input: "linspace/GreaterEqual/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2_1/e"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2_1"
      op: "SelectV2"
      input: "linspace/GreaterEqual:z:0"
      input: "linspace/Maximum_1:z:0"
      input: "linspace/SelectV2_1/e:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/range/start"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/range/delta"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/range/Cast"
      op: "Cast"
      input: "linspace/SelectV2_1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/range"
      op: "Range"
      input: "linspace/range/start:output:0"
      input: "linspace/range/Cast:y:0"
      input: "linspace/range/delta:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Cast_3"
      op: "Cast"
      input: "linspace/range:output:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/range_1/start"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/range_1/delta"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/range_1"
      op: "Range"
      input: "linspace/range_1/start:output:0"
      input: "linspace/strided_slice:output:0"
      input: "linspace/range_1/delta:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Equal"
      op: "Equal"
      input: "linspace/SelectV2:output:0"
      input: "linspace/range_1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "linspace/SelectV2_2/e"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2_2"
      op: "SelectV2"
      input: "linspace/Equal:z:0"
      input: "linspace/Maximum:z:0"
      input: "linspace/SelectV2_2/e:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Reshape"
      op: "Reshape"
      input: "linspace/Cast_3:y:0"
      input: "linspace/SelectV2_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/mul"
      op: "Mul"
      input: "linspace/truediv:z:0"
      input: "linspace/Reshape:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/add_1"
      op: "AddV2"
      input: "linspace/ExpandDims:output:0"
      input: "linspace/mul:z:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/concat"
      op: "ConcatV2"
      input: "linspace/ExpandDims:output:0"
      input: "linspace/add_1:z:0"
      input: "linspace/ExpandDims_1:output:0"
      input: "linspace/SelectV2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/zeros_like"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "linspace/SelectV2_3"
      op: "SelectV2"
      input: "linspace/Equal:z:0"
      input: "linspace/Cast:y:0"
      input: "linspace/Shape_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "linspace/Slice"
      op: "Slice"
      input: "linspace/concat:output:0"
      input: "linspace/zeros_like:output:0"
      input: "linspace/SelectV2_3:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice"
      op: "StridedSlice"
      input: "linspace/Slice:output:0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "concat/values_1"
      op: "Pack"
      input: "linspace_broadcastto_1_max"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "concat/axis"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "concat"
      op: "ConcatV2"
      input: "strided_slice:output:0"
      input: "concat/values_1:output:0"
      input: "concat/axis:output:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1"
      op: "StridedSlice"
      input: "concat:output:0"
      input: "strided_slice_1/stack:output:0"
      input: "strided_slice_1/stack_1:output:0"
      input: "strided_slice_1/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "strided_slice_2/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_2/stack_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_2/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_2"
      op: "StridedSlice"
      input: "concat:output:0"
      input: "strided_slice_2/stack:output:0"
      input: "strided_slice_2/stack_1:output:0"
      input: "strided_slice_2/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stack"
      op: "Pack"
      input: "strided_slice_1:output:0"
      input: "strided_slice_2:output:0"
      input: "Sum:output:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "transpose/perm"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "transpose_0"
      op: "Transpose"
      input: "stack:output:0"
      input: "transpose/perm:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "transpose"
      value: "transpose_0:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: 1
            }
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_true_83983"
      input_arg {
        name: "fill_dims_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
        type: DT_INT32
      }
      input_arg {
        name: "fill_max"
        type: DT_DOUBLE
      }
      input_arg {
        name: "concat_values_1_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_size"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_DOUBLE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_DOUBLE
      }
      input_arg {
        name: "placeholder_2"
        type: DT_DOUBLE
      }
      output_arg {
        name: "transpose"
        type: DT_DOUBLE
      }
    }
    node_def {
      name: "Fill/dims"
      op: "Pack"
      input: "fill_dims_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Fill"
      op: "Fill"
      input: "Fill/dims:output:0"
      input: "fill_max"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Fill_1/dims"
      op: "Pack"
      input: "fill_dims_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Fill_1/value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Fill_1"
      op: "Fill"
      input: "Fill_1/dims:output:0"
      input: "Fill_1/value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice"
      op: "StridedSlice"
      input: "Fill_1:output:0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "concat/values_1"
      op: "Pack"
      input: "concat_values_1_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_size"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "concat/axis"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "concat"
      op: "ConcatV2"
      input: "strided_slice:output:0"
      input: "concat/values_1:output:0"
      input: "concat/axis:output:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_1"
      op: "Pack"
      input: "fill_dims_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1"
      op: "StridedSlice"
      input: "concat:output:0"
      input: "strided_slice_1/stack:output:0"
      input: "strided_slice_1/stack_1:output:0"
      input: "strided_slice_1/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "strided_slice_1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stack"
      op: "Pack"
      input: "Fill:output:0"
      input: "Fill:output:0"
      input: "Cast:y:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "transpose/perm"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "transpose_0"
      op: "Transpose"
      input: "stack:output:0"
      input: "transpose/perm:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "transpose"
      value: "transpose_0:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: 1
            }
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cond_true_83966"
      input_arg {
        name: "zeros_packed_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_DOUBLE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT32
      }
      output_arg {
        name: "zeros"
        type: DT_DOUBLE
      }
    }
    node_def {
      name: "zeros/packed/1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "zeros/packed"
      op: "Pack"
      input: "zeros_packed_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      input: "zeros/packed/1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "zeros/Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
            }
            double_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "zeros_0"
      op: "Fill"
      input: "zeros/packed:output:0"
      input: "zeros/Const:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "zeros"
      value: "zeros_0:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: 1
            }
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_from_generator_get_iterator_id_fn_82809"
      input_arg {
        name: "args_0"
        type: DT_INT32
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
      control_output: "PyFunc"
    }
    node_def {
      name: "PyFunc"
      op: "PyFunc"
      attr {
        key: "Tin"
        value {
          list {
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "token"
        value {
          s: "pyfunc_36"
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "PyFunc:output:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^PyFunc"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "_tf_data_function"
      value {
        b: true
      }
    }
    control_ret {
      key: "PyFunc"
      value: "PyFunc"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cond_false_83967"
      input_arg {
        name: "cond_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
        type: DT_INT32
      }
      input_arg {
        name: "min_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cast"
        type: DT_DOUBLE
      }
      input_arg {
        name: "cond_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_size"
        type: DT_INT32
      }
      output_arg {
        name: "cond_identity"
        type: DT_DOUBLE
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Min"
      op: "Min"
      input: "min_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cast"
      input: "Const:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Const_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Max"
      op: "Max"
      input: "min_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cast"
      input: "Const_1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "sub"
      op: "Sub"
      input: "Max:output:0"
      input: "Min:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Equal/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
            }
            double_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "Equal"
      op: "Equal"
      input: "sub:z:0"
      input: "Equal/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "cond"
      op: "StatelessIf"
      input: "Equal:z:0"
      input: "cond_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      input: "Max:output:0"
      input: "cond_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_size"
      input: "sub:z:0"
      input: "min_adanet_iteration_0_ensemble_t0_linear_grow_complexity_regularized_t0_linear_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cast"
      input: "Min:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_INT32
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_DOUBLE
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "_read_only_resource_inputs"
        value {
          list {
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "cond_false_83984"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "cond_true_83983"
          }
        }
      }
    }
    node_def {
      name: "cond/Identity"
      op: "Identity"
      input: "cond:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    ret {
      key: "cond_identity"
      value: "cond/Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: 1
            }
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_true_84209"
      input_arg {
        name: "fill_dims_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
        type: DT_INT32
      }
      input_arg {
        name: "fill_max"
        type: DT_DOUBLE
      }
      input_arg {
        name: "concat_values_1_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_size"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_DOUBLE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_DOUBLE
      }
      input_arg {
        name: "placeholder_2"
        type: DT_DOUBLE
      }
      output_arg {
        name: "transpose"
        type: DT_DOUBLE
      }
    }
    node_def {
      name: "Fill/dims"
      op: "Pack"
      input: "fill_dims_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Fill"
      op: "Fill"
      input: "Fill/dims:output:0"
      input: "fill_max"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Fill_1/dims"
      op: "Pack"
      input: "fill_dims_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Fill_1/value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Fill_1"
      op: "Fill"
      input: "Fill_1/dims:output:0"
      input: "Fill_1/value:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice"
      op: "StridedSlice"
      input: "Fill_1:output:0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "concat/values_1"
      op: "Pack"
      input: "concat_values_1_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_size"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "concat/axis"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "concat"
      op: "ConcatV2"
      input: "strided_slice:output:0"
      input: "concat/values_1:output:0"
      input: "concat/axis:output:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_1"
      op: "Pack"
      input: "fill_dims_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1"
      op: "StridedSlice"
      input: "concat:output:0"
      input: "strided_slice_1/stack:output:0"
      input: "strided_slice_1/stack_1:output:0"
      input: "strided_slice_1/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "strided_slice_1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stack"
      op: "Pack"
      input: "Fill:output:0"
      input: "Fill:output:0"
      input: "Cast:y:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "transpose/perm"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "transpose_0"
      op: "Transpose"
      input: "stack:output:0"
      input: "transpose/perm:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "transpose"
      value: "transpose_0:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: 1
            }
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_from_generator_finalize_fn_82821"
      input_arg {
        name: "args_0"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
      control_output: "PyFunc"
    }
    node_def {
      name: "PyFunc"
      op: "PyFunc"
      input: "args_0"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "token"
        value {
          s: "pyfunc_38"
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "PyFunc:output:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^PyFunc"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "_tf_data_function"
      value {
        b: true
      }
    }
    control_ret {
      key: "PyFunc"
      value: "PyFunc"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cond_false_84193"
      input_arg {
        name: "cond_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
        type: DT_INT32
      }
      input_arg {
        name: "min_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cast"
        type: DT_DOUBLE
      }
      input_arg {
        name: "cond_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_size"
        type: DT_INT32
      }
      output_arg {
        name: "cond_identity"
        type: DT_DOUBLE
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Min"
      op: "Min"
      input: "min_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cast"
      input: "Const:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Const_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Max"
      op: "Max"
      input: "min_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cast"
      input: "Const_1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "sub"
      op: "Sub"
      input: "Max:output:0"
      input: "Min:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Equal/y"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
            }
            double_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "Equal"
      op: "Equal"
      input: "sub:z:0"
      input: "Equal/y:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "cond"
      op: "StatelessIf"
      input: "Equal:z:0"
      input: "cond_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_maximum"
      input: "Max:output:0"
      input: "cond_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_size"
      input: "sub:z:0"
      input: "min_adanet_iteration_0_ensemble_t0_1_layer_dnn_grow_complexity_regularized_t0_1_layer_dnn_grow_complexity_regularized_mixture_weights_adanet_adanet_weighted_ensemble_write_summary_buckets_cast"
      input: "Min:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_INT32
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_DOUBLE
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "_read_only_resource_inputs"
        value {
          list {
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "cond_false_84210"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "cond_true_84209"
          }
        }
      }
    }
    node_def {
      name: "cond/Identity"
      op: "Identity"
      input: "cond:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    ret {
      key: "cond_identity"
      value: "cond/Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: 1
            }
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "global_step_cond_false_82788"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "global_step_initializer_zeros_0"
        type: DT_INT64
      }
      output_arg {
        name: "global_step_initializer_zeros"
        type: DT_INT64
      }
    }
    ret {
      key: "global_step_initializer_zeros"
      value: "global_step_initializer_zeros_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "global_step_cond_true_82787"
      input_arg {
        name: "read_readvariableop_global_step"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_INT64
          shape {
          }
        }
      }
      input_arg {
        name: "placeholder"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
    }
    node_def {
      name: "Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "read_readvariableop_global_step"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Read/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
}
versions {
  producer: 987
  min_consumer: 12
}
