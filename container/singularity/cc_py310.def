Bootstrap: docker
From: ubuntu:20.04

%environment
    # PATHS
    export PATH=/opt/miniconda3/bin:$PATH
    . /opt/miniconda3/etc/profile.d/conda.sh
    conda activate cc_env

%files
    #add node2vec pre-compiled binaries
    container/singularity/binaries/node2vec /opt
    container/snap /opt
    container/gensim /opt
    #container/snap_makefile.config /opt/Makefile.config

%post
    
    # update apt
    apt update -y

    # basic packages (~2 min)
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata
    apt install -y build-essential  \
                   gcc \
                   graphviz \
                   cmake \
                   git \
                   wget \
                   curl \
                   vim \
                   bzip2 \
                   libbz2-dev \
                   file \
                   libxrender-dev \
                   libxext-dev \
                   postgresql \
                   postgresql-contrib \
                   swig \
                   python3-dev

    # MS compatible font for plotting (~3 min.)
    DEBIAN_FRONTEND=noninteractive apt install -y ttf-mscorefonts-installer

    # conda
    mkdir -p /opt/miniconda3
    cd /opt/miniconda3 
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
    bash Miniconda3-latest-Linux-x86_64.sh -p /opt/miniconda3 -b -f
    rm Miniconda3-latest-Linux-x86_64.sh
    export PATH=/opt/miniconda3/bin:$PATH
    export MAMBA_NO_LOW_SPEED_LIMIT=1   # no timeout on mamba commands
    export PIPENV_INSTALL_TIMEOUT=3600   # 1h timeout on pip install commands 
    export PIP_DEFAULT_TIMEOUT=3600

    # create and activate conda
    conda update conda -y
    . /opt/miniconda3/etc/profile.d/conda.sh

    # using mamba for speedup
    conda install -q -y -n base -c conda-forge mamba
    conda config --add channels conda-forge
    mamba update -q -n base mamba

    # create venv
    mamba create --name=cc_env python=3.10 -y
    conda activate cc_env

    # conda-specific packages (~1 min)
    mamba install -y -c conda-forge rdkit                                            # Open-Source Cheminformatics Software
    mamba install -y -c openbabel openbabel                                          # chemical toolbox
    mamba install -y mkl-service                                                     # change the number of CPUâ€™s MKL is using
    mamba install -y -c conda-forge hdbscan                                          # clustering
    mamba install -y -c efelix fpsim2                                                # fast compound similarity searches (used in TargetMate)
    mamba install -y -c conda-forge jupyterlab                                       # Jupyter-lab and notebooks
    mamba install -y -c conda-forge ipywidgets                                       # Jupyter-lab widgets
    mamba install -y -c anaconda ipython">7.19"                                      # interactive python
    mamba install -y -c anaconda cython                                              # C extensions
    mamba install -y -c conda-forge chembl_structure_pipeline                        # standardizing molecules the ChEMBL way
    mamba install -y -c pytorch pytorch torchvision torchaudio cudatoolkit=11.3      # pytorch and cuda
    # mamba install -y -c conda-forge faiss-gpu                                        # efficient similarity search and clustering
    
    pip install faiss-cpu
    pip install faiss-gpu
    
    # the package which break more easily is faiss so we test it after installing packages that might uninstall and change numpy
    alias test_faiss='python -c "import faiss, numpy; faiss.Kmeans(10, 20).train(numpy.random.rand(1000, 10).astype(numpy.float32))"'
    if ! test_faiss; then printf -- "\033[31m ERROR: faiss is failing! \033[0m\n"; else printf -- '\033[32m SUCCESS: faiss is working correctly. \033[0m\n'; fi

    # utility packages (~2 min)
    pip install requests
    pip install six                               # py2/py3 compatibility
    pip install pytest                            # unit-testing
    pip install mock                              # mocking for unit-testing
    pip install autologging                       # logging handler
    pip install paramiko                          # ssh client
    pip install psycopg2-binary                   # Postgesql driver
    pip install sqlalchemy                        # ORM SQL
    pip install sphinx                            # to generate docs
    pip install sphinx_rtd_theme                  # docs theme.
    pip install patool                            # unzipping
    pip install wget                              # download library
    pip install tqdm                              # handy progress-bar
    pip install munch                             # dictionary that supports attribute-style access
    pip install joblib                            # lightweight pipelining (constrained by hdbscan 0.8.28)

    # raw data packages
    pip install lxml                              # xml parser
    pip install xlrd                              # Extract data from Excel spreadsheets
    pip install cmapPy                            # interacting with .gctx and .gct files, and other Connectivity Map resources
    pip install csvsort                           # Sort csv

    # chemistry packages
    pip install e3fp                              # 3D molecular fingreprints
    pip install pubchempy                         # Pubchem rest api
    pip install bioservices                       # Access to biological web services programmatically
    pip install standardiser                      # standardising molecules
    pip install chembl_webresource_client         # Chembl API
    pip install signaturizer                      # ChemicalChecker Signaturizer

    # ML packages
    pip install scikit-learn                      # entry level ML in python
    pip install numpy                             # numerical library - required previoous to gensim
    pip install scipy==1.11.4                             # scientific python - required previoous to gensim
#    pip install gensim --no-binary :all:          # topic modelling word2vec (avoid importing binary that are compiled probably on different numpy versions)
    
    # Copying libc to the system to find cython GLIBCXX_3.4.29
    cp /opt/miniconda3/envs/cc_env/lib/libstdc++.so.6 /lib/x86_64-linux-gnu/libstdc++.so.6
    
    # Installing gensim library from source with the freezed version that contains the correction for new numpy lib
    cd /opt/gensim
    pip install .
    cd /opt/miniconda3

    #pip install git+https://github.com/piskvorky/gensim.git@develop
    
    #git config --global http.postBuffer 1048576000
    #git clone https://github.com/piskvorky/gensim.git
    #cd gensim
    #git checkout develop
    #pip install .
    #cd ..

    pip install tensorflow-hub                    # repository of trained machine learning models
    pip install keras                             # NN API
    
    # numerical packages
    pip install pandas                            # handles table-like datastracture
    pip install openpyxl                          # open xlsx
    pip install theano                            # Optimize evaluate math expressions
    pip install fancyimpute==0.5.4                # matrix completion and imputation algorithms
    pip install protobuf                          # Google serialization library
    pip install statsmodels                       # many different statistical models and tests

     if ! test_faiss; then printf -- "\033[31m ERROR: faiss is failing! \033[0m\n"; else printf -- '\033[32m SUCCESS: faiss is working correctly. \033[0m\n'; fi

    pip install tensorflow==2.8.0                        # neural network library

    if ! test_faiss; then printf -- "\033[31m ERROR: faiss is failing! \033[0m\n"; else printf -- '\033[32m SUCCESS: faiss is working correctly. \033[0m\n'; fi
    
    pip install adanet                            # automl for NN

    # graph packages
    pip install networkx                          # graph data stracture and algos
#    pip install snap-stanford                     # Python interface for SNAP
    
    #git clone https://github.com/snap-stanford/snap-python.git
    #git clone https://github.com/snap-stanford/snap.git
    #cp /opt/Makefile.config snap-python/Makefile.config
    #cd snap-python
    #make
    #cd ..
    
    # visualization packages
    pip install matplotlib                        # chart library :)
    pip install seaborn                           # prettier graph built on top of matplotlib
    pip install datashader                        # plot huge 2D datasets (projetions)
    pip install statannot                         # annotate boxplot with significance ***
    pip install matplotlib_venn                   # Venn diagrams

    # Dimensionality reduction
    pip install MulticoreTSNE                     # tSNE algo
    pip install umap-learn                        # UMAP algo

    # additional ML packages
    pip install tpot                              # Auto ML tool with Genetic Programming
    pip install mlflow                            # Platform for the ML lifecycle
    pip install xgboost                           # Gradient Boosting framework
    pip install hyperopt                          # Hyperparameters optimization
    pip install shap                              # SHapley Additive exPlanations for ML models
    
    # integration of D1
    pip install git+https://github.com/Maayanlab/geode.git   # Python implementation of the R package GeoDE
    
    # Clone the chemical checker package (used as fallback)
    cd /opt
    git clone http://gitlabsbnb.irbbarcelona.org/packages/chemical_checker.git

